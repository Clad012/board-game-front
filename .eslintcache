[{"C:\\Users\\Achraff\\projects\\board-game\\src\\index.tsx":"1","C:\\Users\\Achraff\\projects\\board-game\\src\\reportWebVitals.ts":"2","C:\\Users\\Achraff\\projects\\board-game\\src\\App.tsx":"3","C:\\Users\\Achraff\\projects\\board-game\\src\\views\\Game.tsx":"4","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Grid.tsx":"5","C:\\Users\\Achraff\\projects\\board-game\\src\\views\\Main.tsx":"6","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\layouts\\Navbar.tsx":"7","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\layouts\\Container.tsx":"8","C:\\Users\\Achraff\\projects\\board-game\\src\\routes.tsx":"9","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\ActionBar\\ActionBar.tsx":"10","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Node\\Node.tsx":"11","C:\\Users\\Achraff\\projects\\board-game\\src\\views\\Home.tsx":"12","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\UI\\PlayMode.tsx":"13","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\ballAnimation.js":"14","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Modal\\ModalLoading.tsx":"15","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\ControlCard\\ControlCard.tsx":"16","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\UI\\Guide\\UIGuide.tsx":"17","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Chat\\Chat.tsx":"18","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Chat\\Message.tsx":"19","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\UI\\Guide\\GamePlay.tsx":"20"},{"size":500,"mtime":1607274983784,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1607274983784,"results":"23","hashOfConfig":"22"},{"size":293,"mtime":1607637527179,"results":"24","hashOfConfig":"22"},{"size":169,"mtime":1608650045045,"results":"25","hashOfConfig":"22"},{"size":26145,"mtime":1608761331901,"results":"26","hashOfConfig":"22"},{"size":339,"mtime":1608589161939,"results":"27","hashOfConfig":"22"},{"size":1721,"mtime":1608748651796,"results":"28","hashOfConfig":"22"},{"size":255,"mtime":1608481869285,"results":"29","hashOfConfig":"22"},{"size":958,"mtime":1608666448210,"results":"30","hashOfConfig":"22"},{"size":622,"mtime":1608650172695,"results":"31","hashOfConfig":"22"},{"size":3322,"mtime":1608407518040,"results":"32","hashOfConfig":"22"},{"size":1407,"mtime":1608761795725,"results":"33","hashOfConfig":"22"},{"size":704,"mtime":1608762099681,"results":"34","hashOfConfig":"22"},{"size":1282,"mtime":1608666483249,"results":"35","hashOfConfig":"22"},{"size":3206,"mtime":1608745487665,"results":"36","hashOfConfig":"22"},{"size":2523,"mtime":1608758105179,"results":"37","hashOfConfig":"22"},{"size":3460,"mtime":1608747483249,"results":"38","hashOfConfig":"22"},{"size":1809,"mtime":1608664415399,"results":"39","hashOfConfig":"22"},{"size":1192,"mtime":1608660028343,"results":"40","hashOfConfig":"22"},{"size":2117,"mtime":1608748512571,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"q1yiuq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Achraff\\projects\\board-game\\src\\index.tsx",[],["88","89"],"C:\\Users\\Achraff\\projects\\board-game\\src\\reportWebVitals.ts",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\App.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\views\\Game.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Grid.tsx",["90","91","92","93","94","95","96"],"C:\\Users\\Achraff\\projects\\board-game\\src\\views\\Main.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\layouts\\Navbar.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\layouts\\Container.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\routes.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\ActionBar\\ActionBar.tsx",["97","98","99"],"import React, { useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\ninterface actionType {\r\n  checkMovement: (x: string) => void;\r\n  actionsLeft: number;\r\n  isPlayer1: boolean;\r\n}\r\n\r\nexport default function ActionBar(props: actionType) {\r\n  const { checkMovement, actionsLeft, isPlayer1 } = props;\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Card.Body>\r\n          <div>\r\n            {isPlayer1 ? \"Player 1 • \" : \"Player 2 • \"} Actions Lefts:{\" \"}\r\n            {actionsLeft}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n",["100","101"],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Node\\Node.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\views\\Home.tsx",["102"],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\UI\\PlayMode.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\ballAnimation.js",[],["103","104"],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Modal\\ModalLoading.tsx",["105"],"import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface modalTypes {\r\n  showModal: boolean;\r\n  roomID?: string | null | undefined;\r\n  roomType?: string;\r\n  gameEnded: boolean;\r\n  playerWon: number;\r\n  isPlayer1: boolean;\r\n}\r\n\r\nexport default function ModaLoading(props: modalTypes) {\r\n  const { showModal, roomID, gameEnded, playerWon, isPlayer1 } = props;\r\n  const handleClose = () => {\r\n    return;\r\n  };\r\n\r\n  let myInput: any = null;\r\n  const copyToClipboard = () => {\r\n    if (myInput) {\r\n      myInput.select();\r\n      document.execCommand(\"copy\");\r\n      alert(\"Copied the text: \" + myInput.value);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={showModal}\r\n        onHide={handleClose}\r\n        backdrop={false}\r\n        backdropClassName=\"blurBackground\"\r\n        className=\"loading-modal\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"text-center\">\r\n          {!gameEnded && (\r\n            <div>\r\n              <h6 className=\"title\">En attente d'un autre joueur...</h6>\r\n              <Spinner\r\n                animation=\"border\"\r\n                className=\"mt-2 mb-4\"\r\n                variant=\"primary\"\r\n              />\r\n              {roomID && (\r\n                <div className=\"text-left\">\r\n                  <p>Inviter vos amis via ce lien: </p>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                      placeholder=\"Recipient's username\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                      ref={(ref: any) => (myInput = ref)}\r\n                      value={`https://board-game.vercel.app/play?room=private&room_id=${roomID}`}\r\n                      readOnly\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <Button\r\n                        variant=\"outline-secondary\"\r\n                        onClick={copyToClipboard}\r\n                      >\r\n                        🗒 Copier\r\n                      </Button>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          {gameEnded && (\r\n            <div>\r\n              {(playerWon === 1 && isPlayer1) ||\r\n              (playerWon === 2 && !isPlayer1) ? (\r\n                <div className=\"mt-2 mb-2\">\r\n                  <h4>🎉🎉 Vous avez gagné!! 🎉🎉</h4>\r\n                  <a href=\"/\" className=\"replay\">\r\n                    Rejouer\r\n                  </a>\r\n                </div>\r\n              ) : (\r\n                <div className=\"mt-2 mb-2\">\r\n                  <h4>Vous avez perdu! 😔😔😔 </h4>\r\n                  <a href=\"/\" className=\"replay\">\r\n                    Rejouer\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\ControlCard\\ControlCard.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\UI\\Guide\\UIGuide.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Chat\\Chat.tsx",["106"],"import React, { useEffect } from \"react\";\r\nimport Message from \"./Message\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport \"./Chat.css\";\r\n\r\ninterface MessageType {\r\n  text: string;\r\n  isSentByCurrentUser: boolean;\r\n}\r\n\r\ninterface ChatType {\r\n  messages: MessageType[];\r\n  message: string;\r\n  setMessage: (str: string) => void;\r\n  sendMessage: (event: any) => void;\r\n}\r\nexport default function Chat(props: ChatType) {\r\n  let { messages, setMessage, sendMessage, message } = props;\r\n  let chatContainer: any = null;\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n  const scrollToBottom = () => {\r\n    if (chatContainer) chatContainer.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  return (\r\n    <Card className=\"mt-2\">\r\n      <Card.Body>\r\n        <div className=\"frame\">\r\n          <ul>\r\n            {messages.map((message, i) => (\r\n              <div key={i}>\r\n                <Message\r\n                  text={message.text}\r\n                  isSentByCurrentUser={message.isSentByCurrentUser}\r\n                />\r\n              </div>\r\n            ))}\r\n            <div ref={(ref: any) => (chatContainer = ref)}></div>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <div className=\"input-holder\">\r\n            <input\r\n              className=\"mytext\"\r\n              placeholder=\"Type a message\"\r\n              value={message}\r\n              onChange={({ target: { value } }) => setMessage(value)}\r\n              onKeyPress={(event) =>\r\n                event.key === \"Enter\" ? sendMessage(event) : null\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        {messages.length === 0 && (\r\n          <div className=\"chat-intro\">\r\n            Envoyer des messages à votre adversaire\r\n          </div>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Achraff\\projects\\board-game\\src\\components\\Grid\\Chat\\Message.tsx",[],"C:\\Users\\Achraff\\projects\\board-game\\src\\components\\UI\\Guide\\GamePlay.tsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":42,"column":7,"nodeType":"113","messageId":"114","endLine":42,"endColumn":13},{"ruleId":"111","severity":1,"message":"115","line":45,"column":18,"nodeType":"113","messageId":"114","endLine":45,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":122,"column":6,"nodeType":"118","endLine":122,"endColumn":16,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":227,"column":6,"nodeType":"118","endLine":227,"endColumn":8,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"122","line":378,"column":6,"nodeType":"118","endLine":378,"endColumn":16,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":387,"column":6,"nodeType":"118","endLine":387,"endColumn":21,"suggestions":"125"},{"ruleId":"116","severity":1,"message":"126","line":407,"column":6,"nodeType":"118","endLine":407,"endColumn":21,"suggestions":"127"},{"ruleId":"111","severity":1,"message":"128","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"129","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"130","line":12,"column":11,"nodeType":"113","messageId":"114","endLine":12,"endColumn":24},{"ruleId":"107","replacedBy":"131"},{"ruleId":"109","replacedBy":"132"},{"ruleId":"111","severity":1,"message":"133","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":20},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"134","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":14},{"ruleId":"116","severity":1,"message":"135","line":23,"column":6,"nodeType":"118","endLine":23,"endColumn":16,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'HEROKU' is assigned a value but never used.","Identifier","unusedVar","'setSocket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has missing dependencies: 'gameStarted', 'generateMaze', 'getInitialGrid', 'handleTurn', 'isPlayer1', 'nbPlayer', 'previouslyConnected', and 'socket'. Either include them or remove the dependency array. You can also do a functional update 'setNbPlayer(n => ...)' if you only need 'nbPlayer' in the 'setNbPlayer' call.",["140"],"React Hook useEffect has missing dependencies: 'clearBonus', 'clearRecentlyBuiltWalls', 'clearTornado', 'currentTornado', 'generateBonus', 'generateNextTornado', 'generateTornado', 'grid', 'nbTurns', 'playerX', 'playerY', 'socket', and 'tornadoList'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'activeTornados' and 'currentTornado'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has missing dependencies: 'handleTurn' and 'isPlayer1'. Either include them or remove the dependency array.",["143"],"'useState' is defined but never used.","'Button' is defined but never used.","'checkMovement' is assigned a value but never used.",["137"],["138"],"'appendFile' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'scrollToBottom'. Either include it or remove the dependency array.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [location, socket]",{"range":"157","text":"158"},"Update the dependencies array to be: [gameStarted, generateMaze, getInitialGrid, handleTurn, isPlayer1, nbPlayer, previouslyConnected, socket]",{"range":"159","text":"160"},"Update the dependencies array to be: [clearBonus, clearRecentlyBuiltWalls, clearTornado, currentTornado, generateBonus, generateNextTornado, generateTornado, grid, isMyTurn, nbTurns, playerX, playerY, socket, tornadoList]",{"range":"161","text":"162"},"Update the dependencies array to be: [activeTornados, currentTornado, tornadoPlaced]",{"range":"163","text":"164"},"Update the dependencies array to be: [gridGenerated, handleTurn, isPlayer1]",{"range":"165","text":"166"},"Update the dependencies array to be: [messages, scrollToBottom]",{"range":"167","text":"168"},[4092,4102],"[location, socket]",[7132,7134],"[gameStarted, generateMaze, getInitialGrid, handleTurn, isPlayer1, nbPlayer, previouslyConnected, socket]",[12030,12040],"[clearBonus, clearRecentlyBuiltWalls, clearTornado, currentTornado, generateBonus, generateNextTornado, generateTornado, grid, isMyTurn, nbTurns, playerX, playerY, socket, tornadoList]",[12302,12317],"[activeTornados, currentTornado, tornadoPlaced]",[12796,12811],"[gridGenerated, handleTurn, isPlayer1]",[569,579],"[messages, scrollToBottom]"]